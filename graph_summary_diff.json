{
  "graph_stats": {
    "node_count": 1107,
    "edge_count": 2813,
    "avg_degree": 5.0822043,
    "cycles_count": 26,
    "critical_nodes_count": 0
  },
  "seeds_preview": [
    "class CallChain",
    "class CallNodeInfo",
    "class CommunityEdgeOut",
    "class CommunitySummaryOut",
    "class PendingCall",
    "class Summary",
    "class Args",
    "class Command",
    "class ConfigAction",
    "class MetricsAction",
    "class PromptAction",
    "file ./src/architectural_impact/graph_export.rs",
    "file ./src/args.rs",
    "file ./src/main.rs",
    "fn build_global_dependency_graph()",
    "fn collect_files()",
    "fn export_dot_string()",
    "fn export_summary_string()",
    "fn is_code_file()",
    "fn label_propagation_communities()"
  ],
  "top_nodes": [
    [
      "func:./src/args.rs::parse",
      0.007716147
    ],
    [
      "func:./src/tree_sitter/mod.rs::analyze_structure",
      0.0057276995
    ],
    [
      "func:./src/update/auto_updater.rs::get_state_value",
      0.004548277
    ],
    [
      "func:./src/architectural_impact/dependency_graph.rs::get_dependents",
      0.0044714087
    ],
    [
      "func:./src/architectural_impact/dependency_graph.rs::rebuild_adjacency_lists",
      0.002990355
    ],
    [
      "func:./src/architectural_impact/graph_export.rs::build_global_dependency_graph",
      0.0025725781
    ],
    [
      "func:./src/architectural_impact/dependency_graph.rs::to_dot",
      0.0025391115
    ],
    [
      "func:./src/architectural_impact/dependency_graph.rs::get_dependencies",
      0.0025223126
    ],
    [
      "func:./crates/gitai-core/src/lib.rs::init",
      0.0020388877
    ],
    [
      "func:./src/architectural_impact/graph_export.rs::collect_files",
      0.0018963336
    ],
    [
      "func:./src/main.rs::get_cache_dir",
      0.0016189973
    ],
    [
      "func:./src/config_init.rs::initialize",
      0.0015470469
    ],
    [
      "func:./src/update/auto_updater.rs::update_scan_rules",
      0.0014941193
    ],
    [
      "func:./src/architectural_impact/graph_export.rs::is_code_file",
      0.0014588461
    ],
    [
      "func:./src/architectural_impact/dependency_graph.rs::get_statistics",
      0.0014110982
    ],
    [
      "func:./src/architectural_impact/graph_export.rs::export_summary_string",
      0.0012369422
    ],
    [
      "func:./src/architectural_impact/graph_export.rs::export_dot_string",
      0.0012369422
    ],
    [
      "func:./src/update/auto_updater.rs::check_update_status",
      0.0012177124
    ],
    [
      "func:./src/metrics/mod.rs::analyze_trends",
      0.0012115663
    ],
    [
      "func:./src/architectural_impact/dependency_graph.rs::add_resolved_call",
      0.0010619911
    ],
    [
      "func:./src/config_init.rs::with_config_url",
      0.0010139466
    ],
    [
      "func:./src/config_init.rs::with_offline_mode",
      0.0010139466
    ],
    [
      "func:./src/architectural_impact/dependency_graph.rs::calculate_pagerank",
      0.0010039917
    ],
    [
      "func:./src/metrics/visualizer.rs::generate_html_report",
      0.0009854424
    ],
    [
      "func:./src/metrics/mod.rs::compare_snapshots",
      0.0009375187
    ],
    [
      "func:./src/resource_manager.rs::load_resource_config",
      0.000917408
    ],
    [
      "func:./src/architectural_impact/graph_export.rs::label_propagation_communities",
      0.00091552443
    ],
    [
      "func:./src/metrics/mod.rs::get_snapshots",
      0.00089133007
    ],
    [
      "func:./src/review/converter.rs::from",
      0.00082084996
    ],
    [
      "func:./src/bin/generate_deps_dot.rs::main",
      0.0007861299
    ],
    [
      "func:./src/resource_manager.rs::update_all",
      0.0007840226
    ],
    [
      "func:./src/resource_manager.rs::clean_cache",
      0.0007840226
    ],
    [
      "class:./src/args.rs::Args",
      0.00074272987
    ],
    [
      "func:./src/main.rs::handle_mcp",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_init",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_prompts_action",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_config",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_update",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_scan_history",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_metrics",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_git_with_ai",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_update_check",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_graph_export",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_graph_summary",
      0.0006872709
    ],
    [
      "func:./src/main.rs::handle_scan",
      0.0006872709
    ],
    [
      "func:./src/main.rs::init_logger",
      0.0006872709
    ],
    [
      "func:./src/main.rs::find_code_files",
      0.00068160234
    ],
    [
      "class:./src/args.rs::ConfigAction",
      0.00067763036
    ],
    [
      "class:./src/args.rs::Command",
      0.00067763036
    ],
    [
      "class:./src/args.rs::PromptAction",
      0.00067763036
    ],
    [
      "class:./src/args.rs::MetricsAction",
      0.00067763036
    ],
    [
      "func:./src/metrics/mod.rs::cleanup_old_snapshots",
      0.0006721989
    ],
    [
      "func:./src/metrics/mod.rs::record_snapshot",
      0.0006721989
    ],
    [
      "class:./src/architectural_impact/graph_export.rs::CallNodeInfo",
      0.000652592
    ],
    [
      "class:./src/architectural_impact/graph_export.rs::CommunitySummaryOut",
      0.000652592
    ],
    [
      "class:./src/architectural_impact/graph_export.rs::CommunityEdgeOut",
      0.000652592
    ],
    [
      "class:./src/architectural_impact/graph_export.rs::PendingCall",
      0.000652592
    ],
    [
      "func:./src/architectural_impact/graph_export.rs::query_call_chain",
      0.000652592
    ],
    [
      "class:./src/architectural_impact/graph_export.rs::Summary",
      0.000652592
    ],
    [
      "class:./src/architectural_impact/graph_export.rs::CallChain",
      0.000652592
    ],
    [
      "func:./src/main.rs::main",
      0.0006450805
    ],
    [
      "func:./src/metrics/mod.rs::count_lines_of_code",
      0.0006356772
    ],
    [
      "func:./src/tree_sitter/analyzer.rs::test_analyze_c_code",
      0.0006311304
    ],
    [
      "func:./src/tree_sitter/analyzer.rs::test_analyze_with_real_parser",
      0.0006311304
    ],
    [
      "func:./src/tree_sitter/analyzer.rs::test_analyze_go_code",
      0.0006311304
    ],
    [
      "func:./src/tree_sitter/analyzer.rs::test_analyze_cpp_code",
      0.0006311304
    ],
    [
      "func:./src/tree_sitter/unified_analyzer.rs::test_analyze_rust_code",
      0.0006278481
    ],
    [
      "file:./src/args.rs",
      0.00061253045
    ],
    [
      "file:./src/main.rs",
      0.00061253045
    ],
    [
      "file:./src/architectural_impact/graph_export.rs",
      0.00061253045
    ]
  ],
  "kept_nodes": 70,
  "radius": 1,
  "truncated": false,
  "communities": [
    {
      "id": "file:./src/architectural_impact/dependency_graph.rs",
      "size": 53,
      "samples": [
        "fn dfs_cycle_detection()",
        "fn dfs_paths()",
        "fn add_edge()",
        "fn add_node()",
        "fn rebuild_adjacency_lists()",
        "fn to_dot()",
        "fn execute_review_with_result()",
        "fn get_edge_weight()",
        "fn detect_cycles()",
        "fn get_statistics()"
      ]
    },
    {
      "id": "file:./src/project_insights.rs",
      "size": 47,
      "samples": [
        "fn build_dependency_graph()",
        "fn identify_quality_hotspots()",
        "fn analyze_api_surface()",
        "fn generate()",
        "fn identify_affected_modules()",
        "fn detect_breaking_changes()",
        "fn calculate_impact_score()",
        "fn identify_architectural_layers()",
        "class ProjectInsights",
        "fn dfs_detect_cycle()"
      ]
    },
    {
      "id": "file:./src/update/auto_updater.rs",
      "size": 39,
      "samples": [
        "fn get_state_value()",
        "fn set_state_value()",
        "fn retry_async()",
        "fn get_cache_dir()",
        "fn get_last_prompt_update()",
        "fn get_last_version_check()",
        "fn get_last_rule_update()",
        "fn update_scan_rules()",
        "fn check_update_status()",
        "fn set_last_rule_update()"
      ]
    },
    {
      "id": "file:./src/mcp/mod.rs",
      "size": 37,
      "samples": [
        "fn invalid_parameters_error()",
        "fn execution_failed_error()",
        "fn get_stats()",
        "fn reset()",
        "fn analyze_deviation()",
        "fn configuration_error()",
        "fn record_call_start()",
        "fn record_call_failure()",
        "fn record_call_success()",
        "fn parse_error()"
      ]
    },
    {
      "id": "file:./src/architectural_impact/git_state_analyzer.rs",
      "size": 34,
      "samples": [
        "fn analyze_git_diff()",
        "fn infer_language_from_path()",
        "fn extract_function_name()",
        "fn get_changed_files()",
        "fn get_or_init_tree_sitter()",
        "fn extract_interface_name()",
        "fn extract_struct_name()",
        "fn get_base_commit()",
        "fn analyze_after_state()",
        "fn analyze_before_state()"
      ]
    },
    {
      "id": "file:./crates/gitai-core/src/context.rs",
      "size": 34,
      "samples": [
        "fn with_diff()",
        "fn with_options()",
        "fn new()",
        "fn with_dependency_graph()",
        "fn issue_context()",
        "fn has_high_risk()",
        "fn with_cascade_effects()",
        "class OperationContext",
        "class OperationOptions",
        "fn for_analysis()"
      ]
    },
    {
      "id": "file:./src/metrics/mod.rs",
      "size": 32,
      "samples": [
        "fn analyze_trends()",
        "fn compare_snapshots()",
        "fn get_snapshots()",
        "fn create_test_snapshot()",
        "fn generate_report()",
        "fn handle_metrics()",
        "fn find_code_files()",
        "fn cleanup_old_snapshots()",
        "fn record_snapshot()",
        "fn get_current_branch()"
      ]
    },
    {
      "id": "file:./src/architectural_impact/impact_propagation.rs",
      "size": 31,
      "samples": [
        "fn get_edge_impact_factor()",
        "fn calculate_impact()",
        "fn create_test_graph()",
        "fn calculate_propagated_impact()",
        "fn build_impact_scope()",
        "fn bfs_propagation()",
        "fn get_node_impact_factor()",
        "fn generate_impact_reason()",
        "fn get_component_type()",
        "fn calculate_path_weight()"
      ]
    },
    {
      "id": "file:./crates/gitai-types/src/lib.rs",
      "size": 28,
      "samples": [
        "fn to_score()",
        "fn score()",
        "fn from()",
        "class Severity",
        "class ComplexityLevel",
        "class RiskLevel",
        "fn from_cyclomatic()",
        "fn to_emoji()",
        "fn to_color()",
        "fn test_severity_ordering()"
      ]
    },
    {
      "id": "file:./src/analysis.rs",
      "size": 27,
      "samples": [
        "fn has_issues()",
        "fn extract_score()",
        "fn issue_context()",
        "class Analyzer",
        "fn with_diff()",
        "fn with_issues()",
        "fn build_impact_metadata()",
        "fn analyze_security()",
        "fn with_structural_info()",
        "fn has_changes()"
      ]
    },
    {
      "id": "file:./src/resource_manager.rs",
      "size": 26,
      "samples": [
        "fn update_metadata()",
        "fn download_from_git()",
        "fn download_grammars()",
        "fn download_rules()",
        "fn download_archive()",
        "fn git_clone()",
        "fn download_from_url()",
        "fn extract_zip()",
        "fn extract_tar_gz()",
        "fn load_resource_config()"
      ]
    },
    {
      "id": "file:./src/architectural_impact/cascade_detector.rs",
      "size": 25,
      "samples": [
        "fn get_dependents()",
        "fn calculate_centrality()",
        "fn get_dependencies()",
        "fn edge_impact_factor()",
        "fn node_contains()",
        "fn setup_graph()",
        "fn export_summary_string()",
        "fn label_propagation_communities()",
        "fn detect_cascades()",
        "fn enumerate_chains()"
      ]
    },
    {
      "id": "file:./src/tree_sitter/cache.rs",
      "size": 25,
      "samples": [
        "fn cache_file_path()",
        "fn save_to_disk()",
        "fn reset()",
        "fn is_expired()",
        "fn clear()",
        "fn set()",
        "fn stats()",
        "fn load_from_disk()",
        "fn touch()",
        "fn remove_from_disk()"
      ]
    },
    {
      "id": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "size": 24,
      "samples": [
        "fn analyze_structure()",
        "fn get_parser()",
        "fn name()",
        "fn all()",
        "class TreeSitterManager",
        "fn new()",
        "fn queries()",
        "class SupportedLanguage",
        "fn from_extension()",
        "fn from_name()"
      ]
    },
    {
      "id": "file:./src/commit.rs",
      "size": 23,
      "samples": [
        "fn parse_issue_ids()",
        "fn execute_commit_with_result()",
        "fn count_changes()",
        "fn format_commit_message()",
        "fn build_issue_context()",
        "fn format_structure_info()",
        "fn infer_language_from_diff()",
        "fn extract_code_from_diff()",
        "fn perform_structural_analysis()",
        "fn execute_git_operations_with_result()"
      ]
    },
    {
      "id": "file:./src/mcp/services/analysis.rs",
      "size": 21,
      "samples": [
        "fn find_code_files()",
        "fn convert_analysis_result()",
        "fn analyze_single_file()",
        "fn analyze_directory()",
        "fn execute_analysis()",
        "class AnalysisService",
        "fn calculate_maintainability_index()",
        "fn handle_tool_call()",
        "fn tools()",
        "fn name()"
      ]
    },
    {
      "id": "file:./src/architectural_impact/mod.rs",
      "size": 21,
      "samples": [
        "fn calculate_overall_risk()",
        "fn add_breaking_change()",
        "fn generate_summary()",
        "fn benchmark_risk_assessment()",
        "fn description()",
        "class ArchitecturalImpactAnalysis",
        "fn new()",
        "fn emoji()",
        "class BreakingChangeType",
        "class RiskLevel"
      ]
    },
    {
      "id": "file:./src/mcp/services/dependency.rs",
      "size": 21,
      "samples": [
        "fn find_code_files()",
        "fn generate_dependency_output()",
        "fn analyze_file_dependencies()",
        "fn analyze_directory_dependencies()",
        "fn analyze_single_file_for_merge()",
        "fn merge_dependency_graph()",
        "fn execute_dependency_graph()",
        "class DependencyService",
        "fn convert_to_mermaid()",
        "fn infer_language_from_path()"
      ]
    },
    {
      "id": "file:./src/config_init.rs",
      "size": 21,
      "samples": [
        "fn initialize()",
        "fn download_config()",
        "fn with_config_url()",
        "fn with_offline_mode()",
        "fn copy_default_config()",
        "fn create_version_file()",
        "fn ensure_directories()",
        "fn initialize_prompts()",
        "fn try_download_default_config()",
        "fn migrate_config_if_needed()"
      ]
    },
    {
      "id": "file:./src/tree_sitter/custom_queries.rs",
      "size": 20,
      "samples": [
        "fn validate_config()",
        "fn merge_queries()",
        "fn load_custom_query_file()",
        "fn load_all_custom_queries()",
        "fn get_queries_for_language()",
        "fn add_custom_language()",
        "fn reload()",
        "class CustomQueryManager",
        "fn get_custom_queries()",
        "fn set_enabled()"
      ]
    },
    {
      "id": "class:./src/metrics/visualizer.rs::TrendVisualizer",
      "size": 18,
      "samples": [
        "fn generate_report()",
        "fn create_test_analysis()",
        "fn generate_html_report()",
        "fn write_detailed_data_table()",
        "fn write_recommendations()",
        "fn write_predictions()",
        "fn write_overall_trend()",
        "fn write_metric_trends()",
        "fn write_key_findings()",
        "fn write_trend_chart()"
      ]
    },
    {
      "id": "file:./src/security_insights.rs",
      "size": 18,
      "samples": [
        "fn parse_severity()",
        "fn analyze_boundary_protection()",
        "fn analyze_pattern_compliance()",
        "fn parse_architectural_response()",
        "fn parse_issue_context()",
        "fn parse_requirement_response()",
        "fn analyze_requirement_deviation()",
        "fn analyze_architectural_consistency()",
        "fn analyze_code()",
        "class SecurityInsights"
      ]
    },
    {
      "id": "file:./src/tree_sitter/unified_analyzer.rs",
      "size": 18,
      "samples": [
        "fn parse_parameters()",
        "fn is_doc_comment()",
        "fn extract_calls()",
        "fn analyze()",
        "fn extract_functions()",
        "fn extract_comments()",
        "fn extract_classes()",
        "fn calculate_complexity_hints()",
        "fn parse_config()",
        "fn load_from_config_file()"
      ]
    },
    {
      "id": "file:./src/context.rs",
      "size": 18,
      "samples": [
        "fn parse_issue_ids()",
        "fn needs_issue_context()",
        "fn has_issues()",
        "class OperationOptions",
        "fn with_options()",
        "fn with_issues()",
        "fn with_architectural_impact()",
        "fn for_commit()",
        "fn for_analysis()",
        "fn new()"
      ]
    },
    {
      "id": "class:./src/security_review.rs::ReviewSummary",
      "size": 17,
      "samples": [
        "fn parse_changed_files()",
        "fn get_file_content()",
        "fn perform_security_scan()",
        "fn analyze_structural_patterns()",
        "fn generate_recommendations()",
        "fn generate_summary()",
        "fn detect_language()",
        "fn get_issue_context()",
        "fn review_changes()",
        "fn new()"
      ]
    },
    {
      "id": "file:./src/args.rs",
      "size": 17,
      "samples": [
        "fn parse()",
        "fn language()",
        "fn from()",
        "class Args",
        "class Command",
        "class PromptAction",
        "class MetricsAction",
        "class ConfigAction",
        "fn validate_query_syntax()",
        "fn new()"
      ]
    },
    {
      "id": "file:./src/prompts.rs",
      "size": 17,
      "samples": [
        "fn with_variable()",
        "fn get_template_path()",
        "fn load_template()",
        "fn get_prompts_dir()",
        "fn get_assets_prompts_dir()",
        "fn render_template()",
        "fn load_and_render()",
        "fn new()",
        "class PromptContext",
        "fn set_variable()"
      ]
    },
    {
      "id": "file:./src/config.rs",
      "size": 16,
      "samples": [
        "fn validate()",
        "class Config",
        "class ScanConfig",
        "class AiConfig",
        "class McpAnalysisConfig",
        "class McpServerConfig",
        "class McpConfig",
        "class McpCommitConfig",
        "class McpReviewConfig",
        "fn default()"
      ]
    },
    {
      "id": "file:./src/metrics/trend_analyzer.rs",
      "size": 16,
      "samples": [
        "fn calculate_metric_trend()",
        "fn calculate_recent_growth_rate()",
        "fn analyze()",
        "fn detect_anomalies()",
        "fn analyze_metric_trends()",
        "fn generate_predictions()",
        "fn calculate_overall_trend()",
        "fn identify_key_findings()",
        "fn filter_by_time_range()",
        "fn generate_recommendations()"
      ]
    },
    {
      "id": "file:./src/metrics/storage.rs",
      "size": 15,
      "samples": [
        "fn get_snapshot_file_path()",
        "fn load_snapshots()",
        "fn save_snapshot()",
        "fn load_all_branches_snapshots()",
        "fn create_test_snapshot()",
        "fn get_storage_stats()",
        "fn test_storage_stats()",
        "fn test_multiple_branches()",
        "fn save_all_snapshots()",
        "fn test_save_and_load_snapshots()"
      ]
    },
    {
      "id": "file:./src/tree_sitter/analyzer.rs",
      "size": 15,
      "samples": [
        "fn parse_parameters()",
        "fn calculate_complexity_hints()",
        "fn is_doc_comment()",
        "fn analyze()",
        "fn setup_queries()",
        "fn extract_classes()",
        "fn extract_functions()",
        "fn extract_comments()",
        "fn new()",
        "class StructureAnalyzer"
      ]
    },
    {
      "id": "file:./src/mcp/services/scan.rs",
      "size": 15,
      "samples": [
        "fn count_by_severity()",
        "fn convert_scan_result()",
        "fn execute_scan()",
        "class ScanService",
        "fn description()",
        "fn handle_tool_call()",
        "fn new()",
        "fn tools()",
        "fn name()",
        "class Severity"
      ]
    },
    {
      "id": "file:./src/architectural_impact/ast_comparison.rs",
      "size": 14,
      "samples": [
        "fn compare_structural_summaries()",
        "fn format_function_signature()",
        "fn create_test_summary_with_function()",
        "fn compare_imports()",
        "fn compare_functions()",
        "fn compare_classes()",
        "fn compare_single_function()",
        "fn test_function_removal_detection()",
        "fn test_function_return_type_change_detection()",
        "fn test_import_changes_detection()"
      ]
    },
    {
      "id": "file:./src/features.rs",
      "size": 14,
      "samples": [
        "fn get_features()",
        "fn get_feature_summary()",
        "fn get_version_info()",
        "fn display_table()",
        "fn display_default()",
        "fn display_json()",
        "fn test_feature_summary()",
        "class FeatureInfo",
        "fn display_features()",
        "fn truncate_string()"
      ]
    },
    {
      "id": "file:./src/tree_sitter/queries.rs",
      "size": 14,
      "samples": [
        "fn ensure_language_queries()",
        "fn download_query_file()",
        "fn is_queries_complete()",
        "fn load_language_queries()",
        "fn ensure_queries_downloaded()",
        "fn clear_cache()",
        "fn new()",
        "fn get_query()",
        "class QueriesManager",
        "fn cache_dir()"
      ]
    },
    {
      "id": "file:./src/scan.rs",
      "size": 14,
      "samples": [
        "fn create_finding_from_result()",
        "fn is_opengrep_installed()",
        "fn get_opengrep_version()",
        "fn read_rules_info()",
        "fn select_language_rules()",
        "fn pick_rules_path()",
        "fn parse_opengrep_output()",
        "class Severity",
        "class Finding",
        "fn install_opengrep()"
      ]
    },
    {
      "id": "class:./src/ai.rs::AiChoice",
      "size": 13,
      "samples": [
        "fn call_ai()",
        "fn get_language()",
        "fn call_ai_with_template()",
        "fn to_ai_context()",
        "class AiMessage",
        "fn review_code()",
        "fn review_code_with_template()",
        "class AiResponse",
        "class AiRequest",
        "fn generate_commit_message()"
      ]
    },
    {
      "id": "file:./src/mcp/services/review.rs",
      "size": 13,
      "samples": [
        "fn execute_review()",
        "class ReviewService",
        "fn description()",
        "fn tools()",
        "fn name()",
        "fn new()",
        "fn handle_tool_call()",
        "fn default_review_config()",
        "class Finding",
        "class ReviewResult"
      ]
    },
    {
      "id": "file:./src/prompt_engine.rs",
      "size": 12,
      "samples": [
        "fn render()",
        "fn new()",
        "fn get_config_path()",
        "fn has_template()",
        "fn get_default_templates()",
        "class PromptEngine",
        "fn load_user_templates()",
        "class YamlConfig",
        "fn test_missing_template()",
        "fn test_prompt_engine_creation()"
      ]
    },
    {
      "id": "file:./src/architectural_impact/graph_export.rs",
      "size": 12,
      "samples": [
        "fn build_global_dependency_graph()",
        "fn collect_files()",
        "fn is_code_file()",
        "fn export_dot_string()",
        "class Summary",
        "fn query_call_chain()",
        "class CommunitySummaryOut",
        "class CommunityEdgeOut",
        "class CallChain",
        "class CallNodeInfo"
      ]
    },
    {
      "id": "file:./src/git.rs",
      "size": 12,
      "samples": [
        "fn run_git()",
        "fn get_unpushed_diff()",
        "fn get_upstream_branch()",
        "fn git_add_all()",
        "fn git_commit()",
        "fn has_unstaged_changes()",
        "fn get_diff()",
        "fn get_status()",
        "fn run_git_capture()",
        "fn has_staged_changes()"
      ]
    },
    {
      "id": "file:./src/review/types.rs",
      "size": 12,
      "samples": [
        "class ReviewCache",
        "fn from_args()",
        "fn new()",
        "fn from_str()",
        "fn needs_issue_context()",
        "class ReviewConfig",
        "fn is_expired()",
        "class Severity",
        "fn deviation_analysis()",
        "class Finding"
      ]
    },
    {
      "id": "file:./src/mcp/services/commit.rs",
      "size": 12,
      "samples": [
        "fn execute_commit()",
        "class CommitService",
        "fn description()",
        "fn name()",
        "fn default_commit_config()",
        "fn new()",
        "fn tools()",
        "fn handle_tool_call()",
        "class ReviewResults",
        "class CommitParams"
      ]
    },
    {
      "id": "file:./src/architectural_impact/ai_context.rs",
      "size": 10,
      "samples": [
        "fn format_for_ai_context()",
        "fn format_change_detail()",
        "fn get_changes_by_risk()",
        "fn format_condensed_ai_context()",
        "fn create_test_change()",
        "fn format_no_impact_message()",
        "fn test_format_no_impact()",
        "fn test_condensed_format()",
        "fn test_format_with_changes()",
        "file ./src/architectural_impact/ai_context.rs"
      ]
    },
    {
      "id": "file:./benches/architectural_impact_bench.rs",
      "size": 9,
      "samples": [
        "fn create_large_summary()",
        "fn generate_ai_context()",
        "fn create_large_diff()",
        "fn get_ai_context()",
        "fn benchmark_ast_comparison()",
        "fn benchmark_ai_context_generation()",
        "fn benchmark_diff_analysis()",
        "fn test_ai_context_generation()",
        "file ./benches/architectural_impact_bench.rs"
      ]
    },
    {
      "id": "file:./src/architectural_impact/risk_assessment.rs",
      "size": 9,
      "samples": [
        "fn assess_breaking_change_risk()",
        "fn calculate_risk_score()",
        "fn create_test_change()",
        "fn generate_mitigation_recommendations()",
        "fn test_risk_score_calculation()",
        "fn generate_risk_summary()",
        "fn test_risk_assessment()",
        "fn test_mitigation_recommendations()",
        "file ./src/architectural_impact/risk_assessment.rs"
      ]
    },
    {
      "id": "file:./src/experimental/graph_summarizer.rs",
      "size": 9,
      "samples": [
        "fn default()",
        "class Scope",
        "class NodeLabel",
        "class CrossEdgeBucket",
        "class GraphSummaryParams",
        "class GraphSummary",
        "class CommunitySummary",
        "class GraphStats",
        "file ./src/experimental/graph_summarizer.rs"
      ]
    },
    {
      "id": "class:./src/update/notifier.rs::UpdateNotifier",
      "size": 9,
      "samples": [
        "fn escape_osascript()",
        "fn send_desktop_notification()",
        "fn notify_new_version_available()",
        "fn notify_update_success()",
        "fn notify_update_start()",
        "fn notify_update_failure()",
        "fn new()",
        "class UpdateNotifier",
        "file ./src/update/notifier.rs"
      ]
    },
    {
      "id": "file:./src/architectural_impact/tests.rs",
      "size": 9,
      "samples": [
        "fn create_test_summary()",
        "fn test_visibility_change_detection()",
        "fn test_risk_level_assessment()",
        "fn test_function_addition_detection()",
        "fn test_class_change_detection()",
        "fn test_no_changes()",
        "fn test_function_signature_change_detection()",
        "fn test_function_removal_detection()",
        "file ./src/architectural_impact/tests.rs"
      ]
    },
    {
      "id": "class:./src/error.rs::GitAIError",
      "size": 8,
      "samples": [
        "fn log()",
        "fn from()",
        "class GitAIError",
        "fn context()",
        "fn user_message()",
        "fn with_hint()",
        "fn fmt()",
        "file ./src/error.rs"
      ]
    }
  ],
  "community_edges": [
    {
      "src": "class:./src/ai.rs::AiChoice",
      "dst": "file:./src/prompts.rs",
      "edges": 10,
      "weight_sum": 10.0
    },
    {
      "src": "file:./src/architectural_impact/dependency_graph.rs",
      "dst": "file:./src/architectural_impact/cascade_detector.rs",
      "edges": 9,
      "weight_sum": 9.0
    },
    {
      "src": "file:./src/architectural_impact/cascade_detector.rs",
      "dst": "file:./src/architectural_impact/dependency_graph.rs",
      "edges": 8,
      "weight_sum": 8.0
    },
    {
      "src": "file:./src/review/executor.rs",
      "dst": "file:./src/architectural_impact/dependency_graph.rs",
      "edges": 6,
      "weight_sum": 6.0
    },
    {
      "src": "file:./src/architectural_impact/impact_propagation.rs",
      "dst": "file:./src/architectural_impact/dependency_graph.rs",
      "edges": 6,
      "weight_sum": 6.0
    },
    {
      "src": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "dst": "file:./src/args.rs",
      "edges": 5,
      "weight_sum": 5.0
    },
    {
      "src": "file:./src/tree_sitter/analyzer.rs",
      "dst": "file:./src/args.rs",
      "edges": 5,
      "weight_sum": 5.0
    },
    {
      "src": "file:./src/update/auto_updater.rs",
      "dst": "class:./src/update/notifier.rs::UpdateNotifier",
      "edges": 4,
      "weight_sum": 4.0
    },
    {
      "src": "file:./src/mcp/services/dependency.rs",
      "dst": "file:./src/architectural_impact/dependency_graph.rs",
      "edges": 4,
      "weight_sum": 4.0
    },
    {
      "src": "file:./src/architectural_impact/mod.rs",
      "dst": "file:./benches/architectural_impact_bench.rs",
      "edges": 4,
      "weight_sum": 4.0
    },
    {
      "src": "file:./src/mcp/services/deviation.rs",
      "dst": "file:./src/mcp/mod.rs",
      "edges": 4,
      "weight_sum": 4.0
    },
    {
      "src": "file:./src/update/auto_updater.rs",
      "dst": "file:./src/metrics/mod.rs",
      "edges": 4,
      "weight_sum": 4.0
    },
    {
      "src": "file:./src/architectural_impact/graph_export.rs",
      "dst": "file:./src/architectural_impact/dependency_graph.rs",
      "edges": 4,
      "weight_sum": 4.0
    },
    {
      "src": "file:./src/args.rs",
      "dst": "file:./src/tree_sitter/analyzer.rs",
      "edges": 4,
      "weight_sum": 4.0
    },
    {
      "src": "file:./src/update/auto_updater.rs",
      "dst": "file:./src/config_init.rs",
      "edges": 3,
      "weight_sum": 3.0
    },
    {
      "src": "file:./src/architectural_impact/ast_comparison.rs",
      "dst": "file:./src/architectural_impact/mod.rs",
      "edges": 3,
      "weight_sum": 3.0
    },
    {
      "src": "file:./src/tree_sitter/unified_analyzer.rs",
      "dst": "file:./src/args.rs",
      "edges": 3,
      "weight_sum": 3.0
    },
    {
      "src": "file:./src/update/auto_updater.rs",
      "dst": "file:./src/resource_manager.rs",
      "edges": 3,
      "weight_sum": 3.0
    },
    {
      "src": "file:./src/bin/generate_deps_dot.rs",
      "dst": "file:./src/architectural_impact/graph_export.rs",
      "edges": 3,
      "weight_sum": 3.0
    },
    {
      "src": "file:./benches/architectural_impact_bench.rs",
      "dst": "file:./src/architectural_impact/tests.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/security_insights.rs",
      "dst": "file:./src/prompt_engine.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/architectural_impact/cascade_detector.rs",
      "dst": "file:./src/architectural_impact/graph_export.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/mcp/services/dependency.rs",
      "dst": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/tree_sitter/unified_analyzer.rs",
      "dst": "file:./src/tree_sitter/custom_queries.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/mcp/services/analysis.rs",
      "dst": "file:./src/mcp/mod.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./benches/architectural_impact_bench.rs",
      "dst": "file:./src/architectural_impact/mod.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/prompts.rs",
      "dst": "class:./src/ai.rs::AiChoice",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/mcp/mod.rs",
      "dst": "file:./src/mcp/services/dependency.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/architectural_impact/git_state_analyzer.rs",
      "dst": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/architectural_impact/impact_propagation.rs",
      "dst": "file:./src/architectural_impact/cascade_detector.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/mcp/services/analysis.rs",
      "dst": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/architectural_impact/graph_export.rs",
      "dst": "file:./src/architectural_impact/cascade_detector.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/project_insights.rs",
      "dst": "class:./src/ai.rs::AiChoice",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./benches/architectural_impact_bench.rs",
      "dst": "file:./src/architectural_impact/git_state_analyzer.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/metrics/mod.rs",
      "dst": "file:./src/args.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/tree_sitter/custom_queries.rs",
      "dst": "file:./src/args.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/mcp/services/dependency.rs",
      "dst": "file:./src/mcp/mod.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/architectural_impact/risk_assessment.rs",
      "dst": "file:./src/architectural_impact/mod.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "func:./src/review/converter.rs::convert_analysis_result",
      "dst": "file:./src/args.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/metrics/mod.rs",
      "dst": "class:./src/metrics/visualizer.rs::TrendVisualizer",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/architectural_impact/ai_context.rs",
      "dst": "file:./src/architectural_impact/mod.rs",
      "edges": 2,
      "weight_sum": 2.0
    },
    {
      "src": "file:./src/mcp/mod.rs",
      "dst": "class:./src/devops.rs::DevOpsClient",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "class:./src/security_review.rs::ReviewSummary",
      "dst": "file:./src/security_insights.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/architectural_impact/tests.rs",
      "dst": "file:./src/architectural_impact/mod.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "class:./src/security_review.rs::ReviewSummary",
      "dst": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/architectural_impact/graph_export.rs",
      "dst": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "class:./src/security_review.rs::ReviewSummary",
      "dst": "class:./src/devops.rs::DevOpsClient",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/architectural_impact/tests.rs",
      "dst": "file:./benches/architectural_impact_bench.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "dst": "file:./src/tree_sitter/queries.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/update/auto_updater.rs",
      "dst": "file:./src/architectural_impact/cascade_detector.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/review/analyzer.rs",
      "dst": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/metrics/mod.rs",
      "dst": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/update/auto_updater.rs",
      "dst": "file:./src/architectural_impact/graph_export.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/architectural_impact/tests.rs",
      "dst": "file:./src/architectural_impact/git_state_analyzer.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/bin/generate_deps_dot.rs",
      "dst": "file:./src/architectural_impact/dependency_graph.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/mcp/services/commit.rs",
      "dst": "file:./src/mcp/mod.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/commit.rs",
      "dst": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/architectural_impact/tests.rs",
      "dst": "file:./src/architectural_impact/breaking_changes.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/update/auto_updater.rs",
      "dst": "class:./src/tree_sitter/mod.rs::ClassInfo",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/mcp/services/scan.rs",
      "dst": "file:./src/mcp/mod.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/commit.rs",
      "dst": "class:./src/devops.rs::DevOpsClient",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./crates/gitai-core/src/lib.rs",
      "dst": "class:./src/bin/gitai-mcp.rs::Cli",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/architectural_impact/dependency_graph.rs",
      "dst": "class:./src/devops.rs::DevOpsClient",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/args.rs",
      "dst": "file:./src/tree_sitter/unified_analyzer.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/mcp/services/review.rs",
      "dst": "file:./src/mcp/mod.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/update/auto_updater.rs",
      "dst": "file:./src/args.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/review/analyzer.rs",
      "dst": "file:./src/architectural_impact/git_state_analyzer.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/architectural_impact/ast_comparison.rs",
      "dst": "file:./benches/architectural_impact_bench.rs",
      "edges": 1,
      "weight_sum": 1.0
    },
    {
      "src": "file:./src/update/auto_updater.rs",
      "dst": "class:./src/bin/gitai-mcp.rs::Cli",
      "edges": 1,
      "weight_sum": 1.0
    }
  ]
}
